{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\components\\\\GoogleDrivePicker.jsx\",\n  _s = $RefreshSig$();\n// src/components/GoogleDrivePicker.jsx\nimport { useState, useCallback } from \"react\";\nimport { ENV } from \"../utils/fromEnv\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function GoogleDrivePicker({\n  folderId,\n  onPicked,\n  label = \"Upload from Google Drive\",\n  className = \"\"\n}) {\n  _s();\n  const [opening, setOpening] = useState(false);\n  const openPicker = useCallback(async () => {\n    if (!window.gapi || !window.google) {\n      setOpening(true);\n      // Lazy load if needed\n      await new Promise(res => setTimeout(res, 400));\n      setOpening(false);\n    }\n    try {\n      setOpening(true);\n\n      // Expect gapi + picker scripts already included in index.html\n      const view = new window.google.picker.DocsUploadView().setIncludeFolders(true);\n      if (folderId) view.setParent(folderId);\n      const picker = new window.google.picker.PickerBuilder().addView(view).setAppId(\"wedding-rsvp\") // no-op label\n      .setOAuthToken(\"\") // using API key + public folder; omit token\n      .setDeveloperKey(ENV.GOOGLE_API_KEY).setCallback(data => {\n        if (data.action === window.google.picker.Action.PICKED) {\n          onPicked === null || onPicked === void 0 ? void 0 : onPicked(data.docs || []);\n        }\n      }).build();\n      picker.setVisible(true);\n    } catch (e) {\n      console.error(\"Picker error\", e);\n      alert(\"Couldn't open Google Picker. Please try again.\");\n    } finally {\n      setOpening(false);\n    }\n  }, [folderId, onPicked]);\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    type: \"button\",\n    onClick: openPicker,\n    disabled: opening,\n    className: `btn-primary w-full sm:w-auto ${className}`,\n    \"aria-busy\": opening ? \"true\" : \"false\",\n    \"aria-label\": \"Open Google Drive file picker\",\n    children: opening ? \"Opening…\" : label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleDrivePicker, \"XxG0ZXHX2nkGcjaOrNQpkf/yRiw=\");\n_c = GoogleDrivePicker;\nvar _c;\n$RefreshReg$(_c, \"GoogleDrivePicker\");","map":{"version":3,"names":["useState","useCallback","ENV","jsxDEV","_jsxDEV","GoogleDrivePicker","folderId","onPicked","label","className","_s","opening","setOpening","openPicker","window","gapi","google","Promise","res","setTimeout","view","picker","DocsUploadView","setIncludeFolders","setParent","PickerBuilder","addView","setAppId","setOAuthToken","setDeveloperKey","GOOGLE_API_KEY","setCallback","data","action","Action","PICKED","docs","build","setVisible","e","console","error","alert","type","onClick","disabled","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/components/GoogleDrivePicker.jsx"],"sourcesContent":["// src/components/GoogleDrivePicker.jsx\r\nimport { useState, useCallback } from \"react\";\r\nimport { ENV } from \"../utils/fromEnv\";\r\n\r\nexport default function GoogleDrivePicker({\r\n  folderId,\r\n  onPicked,\r\n  label = \"Upload from Google Drive\",\r\n  className = \"\",\r\n}) {\r\n  const [opening, setOpening] = useState(false);\r\n\r\n  const openPicker = useCallback(async () => {\r\n    if (!window.gapi || !window.google) {\r\n      setOpening(true);\r\n      // Lazy load if needed\r\n      await new Promise((res) => setTimeout(res, 400));\r\n      setOpening(false);\r\n    }\r\n\r\n    try {\r\n      setOpening(true);\r\n\r\n      // Expect gapi + picker scripts already included in index.html\r\n      const view = new window.google.picker.DocsUploadView().setIncludeFolders(true);\r\n      if (folderId) view.setParent(folderId);\r\n\r\n      const picker = new window.google.picker.PickerBuilder()\r\n        .addView(view)\r\n        .setAppId(\"wedding-rsvp\") // no-op label\r\n        .setOAuthToken(\"\") // using API key + public folder; omit token\r\n        .setDeveloperKey(ENV.GOOGLE_API_KEY)\r\n        .setCallback((data) => {\r\n          if (data.action === window.google.picker.Action.PICKED) {\r\n            onPicked?.(data.docs || []);\r\n          }\r\n        })\r\n        .build();\r\n\r\n      picker.setVisible(true);\r\n    } catch (e) {\r\n      console.error(\"Picker error\", e);\r\n      alert(\"Couldn't open Google Picker. Please try again.\");\r\n    } finally {\r\n      setOpening(false);\r\n    }\r\n  }, [folderId, onPicked]);\r\n\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      onClick={openPicker}\r\n      disabled={opening}\r\n      className={`btn-primary w-full sm:w-auto ${className}`}\r\n      aria-busy={opening ? \"true\" : \"false\"}\r\n      aria-label=\"Open Google Drive file picker\"\r\n    >\r\n      {opening ? \"Opening…\" : label}\r\n    </button>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,GAAG,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,iBAAiBA,CAAC;EACxCC,QAAQ;EACRC,QAAQ;EACRC,KAAK,GAAG,0BAA0B;EAClCC,SAAS,GAAG;AACd,CAAC,EAAE;EAAAC,EAAA;EACD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMa,UAAU,GAAGZ,WAAW,CAAC,YAAY;IACzC,IAAI,CAACa,MAAM,CAACC,IAAI,IAAI,CAACD,MAAM,CAACE,MAAM,EAAE;MAClCJ,UAAU,CAAC,IAAI,CAAC;MAChB;MACA,MAAM,IAAIK,OAAO,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,EAAE,GAAG,CAAC,CAAC;MAChDN,UAAU,CAAC,KAAK,CAAC;IACnB;IAEA,IAAI;MACFA,UAAU,CAAC,IAAI,CAAC;;MAEhB;MACA,MAAMQ,IAAI,GAAG,IAAIN,MAAM,CAACE,MAAM,CAACK,MAAM,CAACC,cAAc,CAAC,CAAC,CAACC,iBAAiB,CAAC,IAAI,CAAC;MAC9E,IAAIjB,QAAQ,EAAEc,IAAI,CAACI,SAAS,CAAClB,QAAQ,CAAC;MAEtC,MAAMe,MAAM,GAAG,IAAIP,MAAM,CAACE,MAAM,CAACK,MAAM,CAACI,aAAa,CAAC,CAAC,CACpDC,OAAO,CAACN,IAAI,CAAC,CACbO,QAAQ,CAAC,cAAc,CAAC,CAAC;MAAA,CACzBC,aAAa,CAAC,EAAE,CAAC,CAAC;MAAA,CAClBC,eAAe,CAAC3B,GAAG,CAAC4B,cAAc,CAAC,CACnCC,WAAW,CAAEC,IAAI,IAAK;QACrB,IAAIA,IAAI,CAACC,MAAM,KAAKnB,MAAM,CAACE,MAAM,CAACK,MAAM,CAACa,MAAM,CAACC,MAAM,EAAE;UACtD5B,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAGyB,IAAI,CAACI,IAAI,IAAI,EAAE,CAAC;QAC7B;MACF,CAAC,CAAC,CACDC,KAAK,CAAC,CAAC;MAEVhB,MAAM,CAACiB,UAAU,CAAC,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,CAAC,EAAE;MACVC,OAAO,CAACC,KAAK,CAAC,cAAc,EAAEF,CAAC,CAAC;MAChCG,KAAK,CAAC,gDAAgD,CAAC;IACzD,CAAC,SAAS;MACR9B,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,CAACN,QAAQ,EAAEC,QAAQ,CAAC,CAAC;EAExB,oBACEH,OAAA;IACEuC,IAAI,EAAC,QAAQ;IACbC,OAAO,EAAE/B,UAAW;IACpBgC,QAAQ,EAAElC,OAAQ;IAClBF,SAAS,EAAE,gCAAgCA,SAAS,EAAG;IACvD,aAAWE,OAAO,GAAG,MAAM,GAAG,OAAQ;IACtC,cAAW,+BAA+B;IAAAmC,QAAA,EAEzCnC,OAAO,GAAG,UAAU,GAAGH;EAAK;IAAAuC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvB,CAAC;AAEb;AAACxC,EAAA,CAxDuBL,iBAAiB;AAAA8C,EAAA,GAAjB9C,iBAAiB;AAAA,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}