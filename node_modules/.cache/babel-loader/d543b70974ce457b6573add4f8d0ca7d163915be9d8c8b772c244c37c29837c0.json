{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\pages\\\\ResetPasswordPage.jsx\",\n  _s = $RefreshSig$();\n// File: src/pages/ResetPasswordUpdatePage.jsx\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { toast } from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordUpdatePage() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [formErr, setFormErr] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Optional: sanity check that a session exists after redirect.\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await supabase.auth.getSession();\n      if (!(data !== null && data !== void 0 && data.session)) {\n        // No session — likely opened this page directly without the email link.\n        toast.error(\"Your reset link is invalid or expired. Request a new one.\");\n      }\n    })();\n  }, []);\n  const submit = async e => {\n    e.preventDefault();\n    setFormErr(\"\");\n    if (!password || !confirm) return setFormErr(\"Please enter and confirm your new password.\");\n    if (password.length < 8) return setFormErr(\"Password must be at least 8 characters.\");\n    if (password !== confirm) return setFormErr(\"Passwords do not match.\");\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password\n      });\n      if (error) throw error;\n      toast.success(\"Password updated! You can now log in.\");\n      navigate(\"/login\", {\n        replace: true\n      });\n    } catch (err) {\n      const msg = (err === null || err === void 0 ? void 0 : err.message) || \"Could not update password. Try requesting a new link.\";\n      setFormErr(msg);\n      toast.error(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-[70vh] flex items-center justify-center p-4\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      className: \"card p-6 w-full max-w-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title text-center\",\n        children: \"Set a New Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), !!formErr && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\",\n        children: formErr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4 space-y-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"New password (min 8 chars)\",\n          autoComplete: \"new-password\",\n          value: password,\n          minLength: 8,\n          onChange: e => setPassword(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          type: \"password\",\n          placeholder: \"Confirm new password\",\n          autoComplete: \"new-password\",\n          value: confirm,\n          onChange: e => setConfirm(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-primary w-full\",\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Updating…\" : \"Update Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordUpdatePage, \"X7mIVMt0pPCzvOvUbM8dz8UK1hs=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPasswordUpdatePage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordUpdatePage\");","map":{"version":3,"names":["useEffect","useState","supabase","toast","useNavigate","jsxDEV","_jsxDEV","ResetPasswordUpdatePage","_s","password","setPassword","confirm","setConfirm","loading","setLoading","formErr","setFormErr","navigate","data","auth","getSession","session","error","submit","e","preventDefault","length","updateUser","success","replace","err","msg","message","className","children","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","autoComplete","value","minLength","onChange","target","disabled","required","_c","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/pages/ResetPasswordPage.jsx"],"sourcesContent":["// File: src/pages/ResetPasswordUpdatePage.jsx\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { toast } from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\n\nexport default function ResetPasswordUpdatePage() {\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [formErr, setFormErr] = useState(\"\");\n  const navigate = useNavigate();\n\n  // Optional: sanity check that a session exists after redirect.\n  useEffect(() => {\n    (async () => {\n      const { data } = await supabase.auth.getSession();\n      if (!data?.session) {\n        // No session — likely opened this page directly without the email link.\n        toast.error(\"Your reset link is invalid or expired. Request a new one.\");\n      }\n    })();\n  }, []);\n\n  const submit = async (e) => {\n    e.preventDefault();\n    setFormErr(\"\");\n\n    if (!password || !confirm) return setFormErr(\"Please enter and confirm your new password.\");\n    if (password.length < 8) return setFormErr(\"Password must be at least 8 characters.\");\n    if (password !== confirm) return setFormErr(\"Passwords do not match.\");\n\n    setLoading(true);\n    try {\n      const { error } = await supabase.auth.updateUser({ password });\n      if (error) throw error;\n      toast.success(\"Password updated! You can now log in.\");\n      navigate(\"/login\", { replace: true });\n    } catch (err) {\n      const msg = err?.message || \"Could not update password. Try requesting a new link.\";\n      setFormErr(msg);\n      toast.error(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"min-h-[70vh] flex items-center justify-center p-4\">\n      <form onSubmit={submit} className=\"card p-6 w-full max-w-md\">\n        <h1 className=\"section-title text-center\">Set a New Password</h1>\n\n        {!!formErr && (\n          <div className=\"mt-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\">\n            {formErr}\n          </div>\n        )}\n\n        <div className=\"mt-4 space-y-3\">\n          <input\n            className=\"input\"\n            type=\"password\"\n            placeholder=\"New password (min 8 chars)\"\n            autoComplete=\"new-password\"\n            value={password}\n            minLength={8}\n            onChange={(e) => setPassword(e.target.value)}\n            disabled={loading}\n            required\n          />\n          <input\n            className=\"input\"\n            type=\"password\"\n            placeholder=\"Confirm new password\"\n            autoComplete=\"new-password\"\n            value={confirm}\n            onChange={(e) => setConfirm(e.target.value)}\n            disabled={loading}\n            required\n          />\n          <button className=\"btn-primary w-full\" type=\"submit\" disabled={loading}>\n            {loading ? \"Updating…\" : \"Update Password\"}\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}