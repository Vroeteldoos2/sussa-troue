{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\context\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// File: src/context/AuthProvider.jsx\nimport { createContext, useContext, useEffect, useMemo, useRef, useCallback, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  role: \"user\",\n  loading: true,\n  signIn: async () => {},\n  signUp: async () => {},\n  signOut: async () => {},\n  resetPassword: async () => {},\n  updateProfile: async () => {}\n});\nasync function fetchRoleFromProfiles(userId) {\n  if (!userId) return \"user\";\n  try {\n    // if your column is \"id\" instead of \"user_id\", swap it below\n    const q = supabase.from(\"profiles\").select(\"is_admin\").eq(\"user_id\", userId);\n    const {\n      data,\n      error\n    } = q.maybeSingle ? await q.maybeSingle() : await q.single(); // support both SDKs\n    if (error) {\n      // If you see 406/No rows on single(), treat as no row\n      console.warn(\"[Auth] profiles fetch error (treated as user):\", (error === null || error === void 0 ? void 0 : error.message) || error);\n      return \"user\";\n    }\n    if (!data) return \"user\";\n    return data.is_admin ? \"admin\" : \"user\";\n  } catch (e) {\n    console.warn(\"[Auth] profiles fetch failed (treated as user):\", (e === null || e === void 0 ? void 0 : e.message) || e);\n    return \"user\";\n  }\n}\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n  const mountedRef = useRef(true);\n  useEffect(() => {\n    mountedRef.current = true;\n    (async () => {\n      try {\n        var _session$user;\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        if (error) console.warn(\"[Auth] getSession error:\", (error === null || error === void 0 ? void 0 : error.message) || error);\n        const u = (_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null;\n        if (!mountedRef.current) return;\n        setUser(u);\n        const r = u ? await fetchRoleFromProfiles(u.id) : \"user\";\n        if (!mountedRef.current) return;\n        setRole(r);\n      } catch (e) {\n        console.warn(\"[Auth] init failed:\", (e === null || e === void 0 ? void 0 : e.message) || e);\n      } finally {\n        if (mountedRef.current) setLoading(false);\n      }\n    })();\n    const {\n      data: subscription\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      try {\n        var _session$user2;\n        if (!mountedRef.current) return;\n        const u = (_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null;\n        setUser(u);\n        const r = u ? await fetchRoleFromProfiles(u.id) : \"user\";\n        if (!mountedRef.current) return;\n        setRole(r);\n      } catch (e) {\n        console.warn(\"[Auth] onAuthStateChange failed:\", (e === null || e === void 0 ? void 0 : e.message) || e);\n      } finally {\n        if (mountedRef.current) setLoading(false);\n      }\n    });\n    return () => {\n      var _subscription$subscri, _subscription$subscri2;\n      mountedRef.current = false;\n      subscription === null || subscription === void 0 ? void 0 : (_subscription$subscri = subscription.subscription) === null || _subscription$subscri === void 0 ? void 0 : (_subscription$subscri2 = _subscription$subscri.unsubscribe) === null || _subscription$subscri2 === void 0 ? void 0 : _subscription$subscri2.call(_subscription$subscri);\n    };\n  }, []);\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n  }, []);\n  const signUp = useCallback(async ({\n    email,\n    password,\n    metadata = {}\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata\n      }\n    });\n    if (error) throw error;\n  }, []);\n  const signOut = useCallback(async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n  }, []);\n  const resetPassword = useCallback(async ({\n    email,\n    redirectTo\n  }) => {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo\n    });\n    if (error) throw error;\n  }, []);\n  const updateProfile = useCallback(async (updates = {}) => {\n    var _data$user;\n    const {\n      data,\n      error\n    } = await supabase.auth.updateUser({\n      data: updates\n    });\n    if (error) throw error;\n    const u = (_data$user = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user !== void 0 ? _data$user : null;\n    setUser(u);\n    const r = u ? await fetchRoleFromProfiles(u.id) : \"user\";\n    setRole(r);\n  }, []);\n  const value = useMemo(() => ({\n    user,\n    role,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n    updateProfile\n  }), [user, role, loading, signIn, signUp, signOut, resetPassword, updateProfile]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"ht/UUYnCv/xNzvi+pJFBRvZWPq0=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useRef","useCallback","useState","supabase","jsxDEV","_jsxDEV","AuthContext","user","role","loading","signIn","signUp","signOut","resetPassword","updateProfile","fetchRoleFromProfiles","userId","q","from","select","eq","data","error","maybeSingle","single","console","warn","message","is_admin","e","AuthProvider","children","_s","setUser","setRole","setLoading","mountedRef","current","_session$user","session","auth","getSession","u","r","id","subscription","onAuthStateChange","_event","_session$user2","_subscription$subscri","_subscription$subscri2","unsubscribe","call","email","password","signInWithPassword","metadata","options","redirectTo","resetPasswordForEmail","updates","_data$user","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/context/AuthProvider.jsx"],"sourcesContent":["// File: src/context/AuthProvider.jsx\nimport { createContext, useContext, useEffect, useMemo, useRef, useCallback, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\n\nconst AuthContext = createContext({\n  user: null,\n  role: \"user\",\n  loading: true,\n  signIn: async () => {},\n  signUp: async () => {},\n  signOut: async () => {},\n  resetPassword: async () => {},\n  updateProfile: async () => {},\n});\n\nasync function fetchRoleFromProfiles(userId) {\n  if (!userId) return \"user\";\n  try {\n    // if your column is \"id\" instead of \"user_id\", swap it below\n    const q = supabase.from(\"profiles\").select(\"is_admin\").eq(\"user_id\", userId);\n    const { data, error } = q.maybeSingle ? await q.maybeSingle() : await q.single(); // support both SDKs\n    if (error) {\n      // If you see 406/No rows on single(), treat as no row\n      console.warn(\"[Auth] profiles fetch error (treated as user):\", error?.message || error);\n      return \"user\";\n    }\n    if (!data) return \"user\";\n    return data.is_admin ? \"admin\" : \"user\";\n  } catch (e) {\n    console.warn(\"[Auth] profiles fetch failed (treated as user):\", e?.message || e);\n    return \"user\";\n  }\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n  const mountedRef = useRef(true);\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    (async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        if (error) console.warn(\"[Auth] getSession error:\", error?.message || error);\n        const u = session?.user ?? null;\n        if (!mountedRef.current) return;\n        setUser(u);\n        const r = u ? await fetchRoleFromProfiles(u.id) : \"user\";\n        if (!mountedRef.current) return;\n        setRole(r);\n      } catch (e) {\n        console.warn(\"[Auth] init failed:\", e?.message || e);\n      } finally {\n        if (mountedRef.current) setLoading(false);\n      }\n    })();\n\n    const { data: subscription } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      try {\n        if (!mountedRef.current) return;\n        const u = session?.user ?? null;\n        setUser(u);\n        const r = u ? await fetchRoleFromProfiles(u.id) : \"user\";\n        if (!mountedRef.current) return;\n        setRole(r);\n      } catch (e) {\n        console.warn(\"[Auth] onAuthStateChange failed:\", e?.message || e);\n      } finally {\n        if (mountedRef.current) setLoading(false);\n      }\n    });\n\n    return () => {\n      mountedRef.current = false;\n      subscription?.subscription?.unsubscribe?.();\n    };\n  }, []);\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    if (error) throw error;\n  }, []);\n\n  const signUp = useCallback(async ({ email, password, metadata = {} }) => {\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: { data: metadata },\n    });\n    if (error) throw error;\n  }, []);\n\n  const signOut = useCallback(async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n  }, []);\n\n  const resetPassword = useCallback(async ({ email, redirectTo }) => {\n    const { error } = await supabase.auth.resetPasswordForEmail(email, { redirectTo });\n    if (error) throw error;\n  }, []);\n\n  const updateProfile = useCallback(async (updates = {}) => {\n    const { data, error } = await supabase.auth.updateUser({ data: updates });\n    if (error) throw error;\n    const u = data?.user ?? null;\n    setUser(u);\n    const r = u ? await fetchRoleFromProfiles(u.id) : \"user\";\n    setRole(r);\n  }, []);\n\n  const value = useMemo(\n    () => ({ user, role, loading, signIn, signUp, signOut, resetPassword, updateProfile }),\n    [user, role, loading, signIn, signUp, signOut, resetPassword, updateProfile]\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n"],"mappings":";;;AAAA;AACA,SAASA,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,EAAEC,MAAM,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpG,SAASC,QAAQ,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,WAAW,gBAAGV,aAAa,CAAC;EAChCW,IAAI,EAAE,IAAI;EACVC,IAAI,EAAE,MAAM;EACZC,OAAO,EAAE,IAAI;EACbC,MAAM,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;EACtBC,MAAM,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;EACtBC,OAAO,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;EACvBC,aAAa,EAAE,MAAAA,CAAA,KAAY,CAAC,CAAC;EAC7BC,aAAa,EAAE,MAAAA,CAAA,KAAY,CAAC;AAC9B,CAAC,CAAC;AAEF,eAAeC,qBAAqBA,CAACC,MAAM,EAAE;EAC3C,IAAI,CAACA,MAAM,EAAE,OAAO,MAAM;EAC1B,IAAI;IACF;IACA,MAAMC,CAAC,GAAGd,QAAQ,CAACe,IAAI,CAAC,UAAU,CAAC,CAACC,MAAM,CAAC,UAAU,CAAC,CAACC,EAAE,CAAC,SAAS,EAAEJ,MAAM,CAAC;IAC5E,MAAM;MAAEK,IAAI;MAAEC;IAAM,CAAC,GAAGL,CAAC,CAACM,WAAW,GAAG,MAAMN,CAAC,CAACM,WAAW,CAAC,CAAC,GAAG,MAAMN,CAAC,CAACO,MAAM,CAAC,CAAC,CAAC,CAAC;IAClF,IAAIF,KAAK,EAAE;MACT;MACAG,OAAO,CAACC,IAAI,CAAC,gDAAgD,EAAE,CAAAJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,KAAIL,KAAK,CAAC;MACvF,OAAO,MAAM;IACf;IACA,IAAI,CAACD,IAAI,EAAE,OAAO,MAAM;IACxB,OAAOA,IAAI,CAACO,QAAQ,GAAG,OAAO,GAAG,MAAM;EACzC,CAAC,CAAC,OAAOC,CAAC,EAAE;IACVJ,OAAO,CAACC,IAAI,CAAC,iDAAiD,EAAE,CAAAG,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEF,OAAO,KAAIE,CAAC,CAAC;IAChF,OAAO,MAAM;EACf;AACF;AAEA,OAAO,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACzC,MAAM,CAACzB,IAAI,EAAE0B,OAAO,CAAC,GAAG/B,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACM,IAAI,EAAE0B,OAAO,CAAC,GAAGhC,QAAQ,CAAC,MAAM,CAAC;EACxC,MAAM,CAACO,OAAO,EAAE0B,UAAU,CAAC,GAAGjC,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAMkC,UAAU,GAAGpC,MAAM,CAAC,IAAI,CAAC;EAE/BF,SAAS,CAAC,MAAM;IACdsC,UAAU,CAACC,OAAO,GAAG,IAAI;IAEzB,CAAC,YAAY;MACX,IAAI;QAAA,IAAAC,aAAA;QACF,MAAM;UAAEjB,IAAI,EAAE;YAAEkB;UAAQ,CAAC;UAAEjB;QAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACqC,IAAI,CAACC,UAAU,CAAC,CAAC;QACrE,IAAInB,KAAK,EAAEG,OAAO,CAACC,IAAI,CAAC,0BAA0B,EAAE,CAAAJ,KAAK,aAALA,KAAK,uBAALA,KAAK,CAAEK,OAAO,KAAIL,KAAK,CAAC;QAC5E,MAAMoB,CAAC,IAAAJ,aAAA,GAAGC,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEhC,IAAI,cAAA+B,aAAA,cAAAA,aAAA,GAAI,IAAI;QAC/B,IAAI,CAACF,UAAU,CAACC,OAAO,EAAE;QACzBJ,OAAO,CAACS,CAAC,CAAC;QACV,MAAMC,CAAC,GAAGD,CAAC,GAAG,MAAM3B,qBAAqB,CAAC2B,CAAC,CAACE,EAAE,CAAC,GAAG,MAAM;QACxD,IAAI,CAACR,UAAU,CAACC,OAAO,EAAE;QACzBH,OAAO,CAACS,CAAC,CAAC;MACZ,CAAC,CAAC,OAAOd,CAAC,EAAE;QACVJ,OAAO,CAACC,IAAI,CAAC,qBAAqB,EAAE,CAAAG,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEF,OAAO,KAAIE,CAAC,CAAC;MACtD,CAAC,SAAS;QACR,IAAIO,UAAU,CAACC,OAAO,EAAEF,UAAU,CAAC,KAAK,CAAC;MAC3C;IACF,CAAC,EAAE,CAAC;IAEJ,MAAM;MAAEd,IAAI,EAAEwB;IAAa,CAAC,GAAG1C,QAAQ,CAACqC,IAAI,CAACM,iBAAiB,CAAC,OAAOC,MAAM,EAAER,OAAO,KAAK;MACxF,IAAI;QAAA,IAAAS,cAAA;QACF,IAAI,CAACZ,UAAU,CAACC,OAAO,EAAE;QACzB,MAAMK,CAAC,IAAAM,cAAA,GAAGT,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEhC,IAAI,cAAAyC,cAAA,cAAAA,cAAA,GAAI,IAAI;QAC/Bf,OAAO,CAACS,CAAC,CAAC;QACV,MAAMC,CAAC,GAAGD,CAAC,GAAG,MAAM3B,qBAAqB,CAAC2B,CAAC,CAACE,EAAE,CAAC,GAAG,MAAM;QACxD,IAAI,CAACR,UAAU,CAACC,OAAO,EAAE;QACzBH,OAAO,CAACS,CAAC,CAAC;MACZ,CAAC,CAAC,OAAOd,CAAC,EAAE;QACVJ,OAAO,CAACC,IAAI,CAAC,kCAAkC,EAAE,CAAAG,CAAC,aAADA,CAAC,uBAADA,CAAC,CAAEF,OAAO,KAAIE,CAAC,CAAC;MACnE,CAAC,SAAS;QACR,IAAIO,UAAU,CAACC,OAAO,EAAEF,UAAU,CAAC,KAAK,CAAC;MAC3C;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MAAA,IAAAc,qBAAA,EAAAC,sBAAA;MACXd,UAAU,CAACC,OAAO,GAAG,KAAK;MAC1BQ,YAAY,aAAZA,YAAY,wBAAAI,qBAAA,GAAZJ,YAAY,CAAEA,YAAY,cAAAI,qBAAA,wBAAAC,sBAAA,GAA1BD,qBAAA,CAA4BE,WAAW,cAAAD,sBAAA,uBAAvCA,sBAAA,CAAAE,IAAA,CAAAH,qBAA0C,CAAC;IAC7C,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMvC,MAAM,GAAGT,WAAW,CAAC,OAAO;IAAEoD,KAAK;IAAEC;EAAS,CAAC,KAAK;IACxD,MAAM;MAAEhC;IAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACqC,IAAI,CAACe,kBAAkB,CAAC;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IAC7E,IAAIhC,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMX,MAAM,GAAGV,WAAW,CAAC,OAAO;IAAEoD,KAAK;IAAEC,QAAQ;IAAEE,QAAQ,GAAG,CAAC;EAAE,CAAC,KAAK;IACvE,MAAM;MAAElC;IAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACqC,IAAI,CAAC7B,MAAM,CAAC;MAC3C0C,KAAK;MACLC,QAAQ;MACRG,OAAO,EAAE;QAAEpC,IAAI,EAAEmC;MAAS;IAC5B,CAAC,CAAC;IACF,IAAIlC,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMV,OAAO,GAAGX,WAAW,CAAC,YAAY;IACtC,MAAM;MAAEqB;IAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACqC,IAAI,CAAC5B,OAAO,CAAC,CAAC;IAC/C,IAAIU,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMT,aAAa,GAAGZ,WAAW,CAAC,OAAO;IAAEoD,KAAK;IAAEK;EAAW,CAAC,KAAK;IACjE,MAAM;MAAEpC;IAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACqC,IAAI,CAACmB,qBAAqB,CAACN,KAAK,EAAE;MAAEK;IAAW,CAAC,CAAC;IAClF,IAAIpC,KAAK,EAAE,MAAMA,KAAK;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMR,aAAa,GAAGb,WAAW,CAAC,OAAO2D,OAAO,GAAG,CAAC,CAAC,KAAK;IAAA,IAAAC,UAAA;IACxD,MAAM;MAAExC,IAAI;MAAEC;IAAM,CAAC,GAAG,MAAMnB,QAAQ,CAACqC,IAAI,CAACsB,UAAU,CAAC;MAAEzC,IAAI,EAAEuC;IAAQ,CAAC,CAAC;IACzE,IAAItC,KAAK,EAAE,MAAMA,KAAK;IACtB,MAAMoB,CAAC,IAAAmB,UAAA,GAAGxC,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEd,IAAI,cAAAsD,UAAA,cAAAA,UAAA,GAAI,IAAI;IAC5B5B,OAAO,CAACS,CAAC,CAAC;IACV,MAAMC,CAAC,GAAGD,CAAC,GAAG,MAAM3B,qBAAqB,CAAC2B,CAAC,CAACE,EAAE,CAAC,GAAG,MAAM;IACxDV,OAAO,CAACS,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoB,KAAK,GAAGhE,OAAO,CACnB,OAAO;IAAEQ,IAAI;IAAEC,IAAI;IAAEC,OAAO;IAAEC,MAAM;IAAEC,MAAM;IAAEC,OAAO;IAAEC,aAAa;IAAEC;EAAc,CAAC,CAAC,EACtF,CAACP,IAAI,EAAEC,IAAI,EAAEC,OAAO,EAAEC,MAAM,EAAEC,MAAM,EAAEC,OAAO,EAAEC,aAAa,EAAEC,aAAa,CAC7E,CAAC;EAED,oBAAOT,OAAA,CAACC,WAAW,CAAC0D,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAhC,QAAA,EAAEA;EAAQ;IAAAkC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAuB,CAAC;AAC9E;AAACpC,EAAA,CAtFeF,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AAwF5B,OAAO,SAASwC,OAAOA,CAAA,EAAG;EAAAC,GAAA;EACxB,OAAO1E,UAAU,CAACS,WAAW,CAAC;AAChC;AAACiE,GAAA,CAFeD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}