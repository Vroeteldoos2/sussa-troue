{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\pages\\\\SignupPage.jsx\",\n  _s = $RefreshSig$();\n// File: src/pages/SignupPage.jsx\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport AuthLayout from \"../components/AuthLayout\";\nimport { AUTH_SLIDES, AUTH_CAPTIONS } from \"./_authAssets\";\nimport { supabase } from \"../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SignupPage() {\n  _s();\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPw, setShowPw] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [formErr, setFormErr] = useState(\"\");\n  const [verifySentTo, setVerifySentTo] = useState(\"\"); // shows success screen when email confirmation is required\n  const navigate = useNavigate();\n  const submit = async e => {\n    e.preventDefault();\n    setFormErr(\"\");\n    const cleanEmail = email.trim().toLowerCase();\n    if (!cleanEmail || !password) {\n      setFormErr(\"Please enter email and password.\");\n      return;\n    }\n    if (password.length < 6) {\n      setFormErr(\"Password must be at least 6 characters.\");\n      return;\n    }\n    setLoading(true);\n    try {\n      // 1) Create the account\n      const {\n        data,\n        error\n      } = await supabase.auth.signUp({\n        email: cleanEmail,\n        password,\n        options: {\n          data: {\n            full_name: fullName || null,\n            name: fullName || null\n          },\n          emailRedirectTo: `${window.location.origin}/login` // after confirm, send them back to login\n        }\n      });\n      if (error) throw error;\n      const user = (data === null || data === void 0 ? void 0 : data.user) || null;\n      const session = (data === null || data === void 0 ? void 0 : data.session) || null;\n\n      // 2) If your Supabase project requires email confirmation:\n      //    session will be null. Show a friendly \"check your email\" message.\n      if (!session) {\n        setVerifySentTo(cleanEmail);\n        toast.success(\"Please verify your email to sign in.\");\n        return;\n      }\n\n      // 3) If email confirmation is NOT required, we already have a session.\n      //    Create/update a profiles row (optional), then navigate to /rsvp\n      try {\n        await supabase.from(\"profiles\").upsert({\n          user_id: user.id,\n          is_admin: false\n        }, {\n          onConflict: \"user_id\"\n        });\n      } catch {\n        /* non-fatal */\n      }\n      toast.success(\"Account created. Welcome!\");\n      navigate(\"/rsvp\", {\n        replace: true\n      });\n    } catch (err) {\n      const msg = (err === null || err === void 0 ? void 0 : err.message) || \"Sign up failed. Please try again.\";\n      setFormErr(msg);\n      toast.error(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // If we sent a verify email, show a success state instead of silently clearing\n  if (verifySentTo) {\n    return /*#__PURE__*/_jsxDEV(AuthLayout, {\n      slides: AUTH_SLIDES,\n      captions: AUTH_CAPTIONS,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"section-title text-center\",\n        children: \"Check your email \\uD83D\\uDCEC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mt-3 text-center text-soil-700\",\n        children: [\"We sent a confirmation link to \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: verifySentTo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 42\n        }, this), \". Click it to finish creating your account, then log in.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-6 flex items-center justify-center gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn-primary\",\n          to: \"/login\",\n          children: \"Back to login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn-outline\",\n          onClick: async () => {\n            setLoading(true);\n            try {\n              const {\n                error\n              } = await supabase.auth.resend({\n                type: \"signup\",\n                email: verifySentTo\n              });\n              if (error) throw error;\n              toast.success(\"Verification email re-sent.\");\n            } catch (e) {\n              toast.error((e === null || e === void 0 ? void 0 : e.message) || \"Could not resend email.\");\n            } finally {\n              setLoading(false);\n            }\n          },\n          disabled: loading,\n          children: loading ? \"Resendingâ€¦\" : \"Resend email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    slides: AUTH_SLIDES,\n    captions: AUTH_CAPTIONS,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-title text-center\",\n      children: \"Create account\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), !!formErr && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\",\n      role: \"alert\",\n      children: formErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      className: \"mt-4 space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block\",\n        htmlFor: \"signup_name\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Full name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"signup_name\",\n          className: \"input\",\n          type: \"text\",\n          placeholder: \"Full name (optional)\",\n          autoComplete: \"name\",\n          value: fullName,\n          onChange: e => setFullName(e.target.value),\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block\",\n        htmlFor: \"signup_email\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"signup_email\",\n          className: \"input\",\n          type: \"email\",\n          placeholder: \"Email\",\n          autoComplete: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"block relative\",\n        htmlFor: \"signup_password\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sr-only\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"signup_password\",\n          className: \"input pr-12\",\n          type: showPw ? \"text\" : \"password\",\n          placeholder: \"Password (min 6 characters)\",\n          autoComplete: \"new-password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          disabled: loading,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"absolute right-2 top-1/2 -translate-y-1/2 text-sm text-soil-600 hover:underline\",\n          onClick: () => setShowPw(s => !s),\n          \"aria-pressed\": showPw ? \"true\" : \"false\",\n          tabIndex: 0,\n          children: showPw ? \"Hide\" : \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary w-full\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Creatingâ€¦\" : \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between text-sm mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"text-soil-700 hover:underline\",\n          children: \"Have an account? Log in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/reset\",\n          className: \"text-soil-700 hover:underline\",\n          children: \"Forgot password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 125,\n    columnNumber: 5\n  }, this);\n}\n_s(SignupPage, \"DYkE95bBj2gSv9pUD7YKz4tkRGQ=\", false, function () {\n  return [useNavigate];\n});\n_c = SignupPage;\nvar _c;\n$RefreshReg$(_c, \"SignupPage\");","map":{"version":3,"names":["useState","Link","useNavigate","toast","AuthLayout","AUTH_SLIDES","AUTH_CAPTIONS","supabase","jsxDEV","_jsxDEV","SignupPage","_s","fullName","setFullName","email","setEmail","password","setPassword","showPw","setShowPw","loading","setLoading","formErr","setFormErr","verifySentTo","setVerifySentTo","navigate","submit","e","preventDefault","cleanEmail","trim","toLowerCase","length","data","error","auth","signUp","options","full_name","name","emailRedirectTo","window","location","origin","user","session","success","from","upsert","user_id","id","is_admin","onConflict","replace","err","msg","message","slides","captions","children","className","fileName","_jsxFileName","lineNumber","columnNumber","to","onClick","resend","type","disabled","role","onSubmit","htmlFor","placeholder","autoComplete","value","onChange","target","required","s","tabIndex","_c","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/pages/SignupPage.jsx"],"sourcesContent":["// File: src/pages/SignupPage.jsx\nimport { useState } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { toast } from \"react-hot-toast\";\nimport AuthLayout from \"../components/AuthLayout\";\nimport { AUTH_SLIDES, AUTH_CAPTIONS } from \"./_authAssets\";\nimport { supabase } from \"../supabaseClient\";\n\nexport default function SignupPage() {\n  const [fullName, setFullName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [showPw, setShowPw] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [formErr, setFormErr] = useState(\"\");\n  const [verifySentTo, setVerifySentTo] = useState(\"\"); // shows success screen when email confirmation is required\n  const navigate = useNavigate();\n\n  const submit = async (e) => {\n    e.preventDefault();\n    setFormErr(\"\");\n\n    const cleanEmail = email.trim().toLowerCase();\n    if (!cleanEmail || !password) {\n      setFormErr(\"Please enter email and password.\");\n      return;\n    }\n    if (password.length < 6) {\n      setFormErr(\"Password must be at least 6 characters.\");\n      return;\n    }\n\n    setLoading(true);\n    try {\n      // 1) Create the account\n      const { data, error } = await supabase.auth.signUp({\n        email: cleanEmail,\n        password,\n        options: {\n          data: {\n            full_name: fullName || null,\n            name: fullName || null,\n          },\n          emailRedirectTo: `${window.location.origin}/login`, // after confirm, send them back to login\n        },\n      });\n      if (error) throw error;\n\n      const user = data?.user || null;\n      const session = data?.session || null;\n\n      // 2) If your Supabase project requires email confirmation:\n      //    session will be null. Show a friendly \"check your email\" message.\n      if (!session) {\n        setVerifySentTo(cleanEmail);\n        toast.success(\"Please verify your email to sign in.\");\n        return;\n      }\n\n      // 3) If email confirmation is NOT required, we already have a session.\n      //    Create/update a profiles row (optional), then navigate to /rsvp\n      try {\n        await supabase\n          .from(\"profiles\")\n          .upsert(\n            {\n              user_id: user.id,\n              is_admin: false,\n            },\n            { onConflict: \"user_id\" }\n          );\n      } catch {\n        /* non-fatal */\n      }\n\n      toast.success(\"Account created. Welcome!\");\n      navigate(\"/rsvp\", { replace: true });\n    } catch (err) {\n      const msg = err?.message || \"Sign up failed. Please try again.\";\n      setFormErr(msg);\n      toast.error(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // If we sent a verify email, show a success state instead of silently clearing\n  if (verifySentTo) {\n    return (\n      <AuthLayout slides={AUTH_SLIDES} captions={AUTH_CAPTIONS}>\n        <h1 className=\"section-title text-center\">Check your email ðŸ“¬</h1>\n        <p className=\"mt-3 text-center text-soil-700\">\n          We sent a confirmation link to <strong>{verifySentTo}</strong>. Click it to finish creating your account,\n          then log in.\n        </p>\n        <div className=\"mt-6 flex items-center justify-center gap-2\">\n          <Link className=\"btn-primary\" to=\"/login\">Back to login</Link>\n          <button\n            className=\"btn-outline\"\n            onClick={async () => {\n              setLoading(true);\n              try {\n                const { error } = await supabase.auth.resend({\n                  type: \"signup\",\n                  email: verifySentTo,\n                });\n                if (error) throw error;\n                toast.success(\"Verification email re-sent.\");\n              } catch (e) {\n                toast.error(e?.message || \"Could not resend email.\");\n              } finally {\n                setLoading(false);\n              }\n            }}\n            disabled={loading}\n          >\n            {loading ? \"Resendingâ€¦\" : \"Resend email\"}\n          </button>\n        </div>\n      </AuthLayout>\n    );\n  }\n\n  return (\n    <AuthLayout slides={AUTH_SLIDES} captions={AUTH_CAPTIONS}>\n      <h1 className=\"section-title text-center\">Create account</h1>\n\n      {!!formErr && (\n        <div\n          className=\"mt-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\"\n          role=\"alert\"\n        >\n          {formErr}\n        </div>\n      )}\n\n      <form onSubmit={submit} className=\"mt-4 space-y-3\">\n        <label className=\"block\" htmlFor=\"signup_name\">\n          <span className=\"sr-only\">Full name</span>\n          <input\n            id=\"signup_name\"\n            className=\"input\"\n            type=\"text\"\n            placeholder=\"Full name (optional)\"\n            autoComplete=\"name\"\n            value={fullName}\n            onChange={(e) => setFullName(e.target.value)}\n            disabled={loading}\n          />\n        </label>\n\n        <label className=\"block\" htmlFor=\"signup_email\">\n          <span className=\"sr-only\">Email</span>\n          <input\n            id=\"signup_email\"\n            className=\"input\"\n            type=\"email\"\n            placeholder=\"Email\"\n            autoComplete=\"email\"\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n            disabled={loading}\n            required\n          />\n        </label>\n\n        <label className=\"block relative\" htmlFor=\"signup_password\">\n          <span className=\"sr-only\">Password</span>\n          <input\n            id=\"signup_password\"\n            className=\"input pr-12\"\n            type={showPw ? \"text\" : \"password\"}\n            placeholder=\"Password (min 6 characters)\"\n            autoComplete=\"new-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n            disabled={loading}\n            required\n          />\n          <button\n            type=\"button\"\n            className=\"absolute right-2 top-1/2 -translate-y-1/2 text-sm text-soil-600 hover:underline\"\n            onClick={() => setShowPw((s) => !s)}\n            aria-pressed={showPw ? \"true\" : \"false\"}\n            tabIndex={0}\n          >\n            {showPw ? \"Hide\" : \"Show\"}\n          </button>\n        </label>\n\n        <button className=\"btn-primary w-full\" type=\"submit\" disabled={loading}>\n          {loading ? \"Creatingâ€¦\" : \"Sign up\"}\n        </button>\n\n        <div className=\"flex items-center justify-between text-sm mt-2\">\n          <Link to=\"/login\" className=\"text-soil-700 hover:underline\">Have an account? Log in</Link>\n          <Link to=\"/reset\" className=\"text-soil-700 hover:underline\">Forgot password?</Link>\n        </div>\n      </form>\n    </AuthLayout>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}