{"ast":null,"code":"import { MEDIA_CONFIG } from \"../config/media\";\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const existing = document.querySelector(`script[src=\"${src}\"]`);\n    if (existing) return resolve();\n    const s = document.createElement(\"script\");\n    s.src = src;\n    s.onload = resolve;\n    s.onerror = reject;\n    document.head.appendChild(s);\n  });\n}\nexport async function openGooglePicker({\n  folderId,\n  onPicked\n}) {\n  const {\n    API_KEY,\n    CLIENT_ID\n  } = MEDIA_CONFIG;\n  if (!API_KEY || !CLIENT_ID) throw new Error(\"Google API key/client ID missing\");\n  await loadScript(\"https://accounts.google.com/gsi/client\");\n  await loadScript(\"https://apis.google.com/js/api.js\");\n  const token = await new Promise((resolve, reject) => {\n    const client = window.google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: \"https://www.googleapis.com/auth/drive.file\",\n      callback: resp => resp !== null && resp !== void 0 && resp.access_token ? resolve(resp.access_token) : reject(new Error(\"Failed to get access token\"))\n    });\n    client.requestAccessToken();\n  });\n  await new Promise(resolve => window.gapi.load(\"picker\", resolve));\n  await new Promise(resolve => window.gapi.load(\"client\", resolve));\n  const view = new window.google.picker.DocsUploadView().setParent(folderId || MEDIA_CONFIG.FOLDERS.MAIN).setIncludeFolders(true).setSelectFolderEnabled(false);\n  const picker = new window.google.picker.PickerBuilder().addView(view).enableFeature(window.google.picker.Feature.MULTISELECT_ENABLED).setOAuthToken(token).setDeveloperKey(API_KEY).setCallback(data => {\n    if ((data === null || data === void 0 ? void 0 : data.action) === window.google.picker.Action.PICKED) {\n      const files = (data.docs || []).map(d => ({\n        id: d.id,\n        name: d.name,\n        mimeType: d.mimeType,\n        url: d.url\n      }));\n      onPicked === null || onPicked === void 0 ? void 0 : onPicked(files);\n    }\n  }).setTitle(\"Upload media to wedding album\").build();\n  picker.setVisible(true);\n}","map":{"version":3,"names":["MEDIA_CONFIG","loadScript","src","Promise","resolve","reject","existing","document","querySelector","s","createElement","onload","onerror","head","appendChild","openGooglePicker","folderId","onPicked","API_KEY","CLIENT_ID","Error","token","client","window","google","accounts","oauth2","initTokenClient","client_id","scope","callback","resp","access_token","requestAccessToken","gapi","load","view","picker","DocsUploadView","setParent","FOLDERS","MAIN","setIncludeFolders","setSelectFolderEnabled","PickerBuilder","addView","enableFeature","Feature","MULTISELECT_ENABLED","setOAuthToken","setDeveloperKey","setCallback","data","action","Action","PICKED","files","docs","map","d","id","name","mimeType","url","setTitle","build","setVisible"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/utils/googlePicker.js"],"sourcesContent":["import { MEDIA_CONFIG } from \"../config/media\";\n\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const existing = document.querySelector(`script[src=\"${src}\"]`);\n    if (existing) return resolve();\n    const s = document.createElement(\"script\");\n    s.src = src; s.onload = resolve; s.onerror = reject; document.head.appendChild(s);\n  });\n}\n\nexport async function openGooglePicker({ folderId, onPicked }) {\n  const { API_KEY, CLIENT_ID } = MEDIA_CONFIG;\n  if (!API_KEY || !CLIENT_ID) throw new Error(\"Google API key/client ID missing\");\n\n  await loadScript(\"https://accounts.google.com/gsi/client\");\n  await loadScript(\"https://apis.google.com/js/api.js\");\n\n  const token = await new Promise((resolve, reject) => {\n    const client = window.google.accounts.oauth2.initTokenClient({\n      client_id: CLIENT_ID,\n      scope: \"https://www.googleapis.com/auth/drive.file\",\n      callback: (resp) => resp?.access_token ? resolve(resp.access_token) : reject(new Error(\"Failed to get access token\"))\n    });\n    client.requestAccessToken();\n  });\n\n  await new Promise((resolve) => window.gapi.load(\"picker\", resolve));\n  await new Promise((resolve) => window.gapi.load(\"client\", resolve));\n\n  const view = new window.google.picker.DocsUploadView()\n    .setParent(folderId || MEDIA_CONFIG.FOLDERS.MAIN)\n    .setIncludeFolders(true)\n    .setSelectFolderEnabled(false);\n\n  const picker = new window.google.picker.PickerBuilder()\n    .addView(view)\n    .enableFeature(window.google.picker.Feature.MULTISELECT_ENABLED)\n    .setOAuthToken(token)\n    .setDeveloperKey(API_KEY)\n    .setCallback((data) => {\n      if (data?.action === window.google.picker.Action.PICKED) {\n        const files = (data.docs || []).map((d) => ({ id: d.id, name: d.name, mimeType: d.mimeType, url: d.url }));\n        onPicked?.(files);\n      }\n    })\n    .setTitle(\"Upload media to wedding album\")\n    .build();\n\n  picker.setVisible(true);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}