{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\components\\\\GoogleDrivePicker.jsx\",\n  _s = $RefreshSig$();\n// File: src/components/GoogleDrivePicker.jsx\nimport { useEffect, useRef, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { prefixWithUploader, inferMediaType, drivePreviewUrl } from \"../utils/drive\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\nconst SCOPES = [\"https://www.googleapis.com/auth/drive.file\", \"https://www.googleapis.com/auth/drive.readonly\", \"profile\", \"email\"].join(\" \");\nconst LOAD_GSI = \"https://accounts.google.com/gsi/client\";\nconst LOAD_PICKER = \"https://apis.google.com/js/api.js\";\nexport default function GoogleDrivePicker({\n  targetFolderId,\n  buttonLabel = \"Upload to Album\",\n  className = \"\"\n}) {\n  _s();\n  const [gapiReady, setGapiReady] = useState(false);\n  const [token, setToken] = useState(null);\n  const [profile, setProfile] = useState(null);\n  const pickerApiLoaded = useRef(false);\n\n  // Load scripts\n  useEffect(() => {\n    const ensure = async () => {\n      await loadScript(LOAD_GSI);\n      await loadScript(LOAD_PICKER);\n      window.gapi.load(\"picker\", () => pickerApiLoaded.current = true);\n      window.gapi.load(\"client:auth2\", async () => {\n        try {\n          await window.gapi.client.init({\n            apiKey: API_KEY,\n            clientId: CLIENT_ID,\n            scope: SCOPES,\n            discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"]\n          });\n          setGapiReady(true);\n        } catch (e) {\n          console.error(\"gapi init error\", e);\n        }\n      });\n    };\n    ensure();\n  }, []);\n  const signIn = async () => {\n    const auth = window.gapi.auth2.getAuthInstance();\n    const user = await auth.signIn();\n    const authResp = user.getAuthResponse(true);\n    setToken(authResp.access_token);\n\n    // Basic profile\n    const pf = user.getBasicProfile();\n    setProfile({\n      name: (pf === null || pf === void 0 ? void 0 : pf.getName()) || \"\",\n      email: (pf === null || pf === void 0 ? void 0 : pf.getEmail()) || \"\"\n    });\n  };\n  const openPicker = () => {\n    if (!pickerApiLoaded.current || !token) return;\n\n    /* global google */\n    const view = new google.picker.DocsUploadView().setParent(targetFolderId);\n    const picker = new google.picker.PickerBuilder().addView(view).setOAuthToken(token).setDeveloperKey(API_KEY).setCallback(pickerCallback).setTitle(\"Upload wedding media\").enableFeature(google.picker.Feature.SIMPLE_UPLOAD_ENABLED).build();\n    picker.setVisible(true);\n  };\n  const pickerCallback = async data => {\n    var _session$data, _session$data$session, _session$data$session2;\n    if (data.action !== google.picker.Action.PICKED) return;\n    // Multiple files possible\n    const picked = data.docs || [];\n    const session = await supabase.auth.getSession();\n    const userId = (session === null || session === void 0 ? void 0 : (_session$data = session.data) === null || _session$data === void 0 ? void 0 : (_session$data$session = _session$data.session) === null || _session$data$session === void 0 ? void 0 : (_session$data$session2 = _session$data$session.user) === null || _session$data$session2 === void 0 ? void 0 : _session$data$session2.id) || null;\n    for (const doc of picked) {\n      const originalName = doc.name;\n      const renamed = prefixWithUploader(profile === null || profile === void 0 ? void 0 : profile.name, originalName);\n\n      // Try to rename uploaded file on Drive (best-effort)\n      try {\n        await window.gapi.client.request({\n          path: `/drive/v3/files/${doc.id}`,\n          method: \"PATCH\",\n          body: {\n            name: renamed,\n            parents: [targetFolderId]\n          }\n        });\n      } catch (e) {\n        console.warn(\"Rename failed (non-blocking):\", e);\n      }\n      const mime = doc.mimeType || \"application/octet-stream\";\n      const mediaType = inferMediaType(mime);\n      const previewUrl = drivePreviewUrl(doc.id);\n      await supabase.from(\"album_files\").insert({\n        drive_file_id: doc.id,\n        drive_name: renamed,\n        mime_type: mime,\n        size_bytes: doc.sizeBytes || null,\n        uploader_name: (profile === null || profile === void 0 ? void 0 : profile.name) || null,\n        uploader_email: (profile === null || profile === void 0 ? void 0 : profile.email) || null,\n        uploaded_by: userId,\n        folder_id: targetFolderId,\n        media_type: mediaType,\n        preview_url: previewUrl\n      });\n    }\n    alert(\"Upload recorded! Refresh the album to see your media.\");\n  };\n  const handleClick = async () => {\n    if (!gapiReady) return;\n    if (!token) {\n      await signIn();\n    }\n    openPicker();\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    className: `px-4 py-2 rounded-xl shadow-lg bg-gradient-to-r from-emerald-500 to-teal-600 text-white hover:opacity-90 ${className}`,\n    disabled: !gapiReady,\n    title: \"Upload images/videos from your device to the wedding Drive\",\n    children: buttonLabel\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n}\n_s(GoogleDrivePicker, \"ilk5tkNNwzNDeUzK5/0C6bWObEQ=\");\n_c = GoogleDrivePicker;\nasync function loadScript(src) {\n  if (document.querySelector(`script[src=\"${src}\"]`)) return;\n  await new Promise((resolve, reject) => {\n    const s = document.createElement(\"script\");\n    s.src = src;\n    s.async = true;\n    s.onload = resolve;\n    s.onerror = reject;\n    document.head.appendChild(s);\n  });\n}\nvar _c;\n$RefreshReg$(_c, \"GoogleDrivePicker\");","map":{"version":3,"names":["useEffect","useRef","useState","supabase","prefixWithUploader","inferMediaType","drivePreviewUrl","jsxDEV","_jsxDEV","API_KEY","process","env","REACT_APP_GOOGLE_API_KEY","CLIENT_ID","REACT_APP_GOOGLE_CLIENT_ID","SCOPES","join","LOAD_GSI","LOAD_PICKER","GoogleDrivePicker","targetFolderId","buttonLabel","className","_s","gapiReady","setGapiReady","token","setToken","profile","setProfile","pickerApiLoaded","ensure","loadScript","window","gapi","load","current","client","init","apiKey","clientId","scope","discoveryDocs","e","console","error","signIn","auth","auth2","getAuthInstance","user","authResp","getAuthResponse","access_token","pf","getBasicProfile","name","getName","email","getEmail","openPicker","view","google","picker","DocsUploadView","setParent","PickerBuilder","addView","setOAuthToken","setDeveloperKey","setCallback","pickerCallback","setTitle","enableFeature","Feature","SIMPLE_UPLOAD_ENABLED","build","setVisible","data","_session$data","_session$data$session","_session$data$session2","action","Action","PICKED","picked","docs","session","getSession","userId","id","doc","originalName","renamed","request","path","method","body","parents","warn","mime","mimeType","mediaType","previewUrl","from","insert","drive_file_id","drive_name","mime_type","size_bytes","sizeBytes","uploader_name","uploader_email","uploaded_by","folder_id","media_type","preview_url","alert","handleClick","onClick","disabled","title","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","src","document","querySelector","Promise","resolve","reject","s","createElement","async","onload","onerror","head","appendChild","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/components/GoogleDrivePicker.jsx"],"sourcesContent":["// File: src/components/GoogleDrivePicker.jsx\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { supabase } from \"../supabaseClient\";\r\nimport { prefixWithUploader, inferMediaType, drivePreviewUrl } from \"../utils/drive\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GOOGLE_API_KEY;\r\nconst CLIENT_ID = process.env.REACT_APP_GOOGLE_CLIENT_ID;\r\n\r\nconst SCOPES = [\r\n  \"https://www.googleapis.com/auth/drive.file\",\r\n  \"https://www.googleapis.com/auth/drive.readonly\",\r\n  \"profile\",\r\n  \"email\",\r\n].join(\" \");\r\n\r\nconst LOAD_GSI = \"https://accounts.google.com/gsi/client\";\r\nconst LOAD_PICKER = \"https://apis.google.com/js/api.js\";\r\n\r\nexport default function GoogleDrivePicker({ targetFolderId, buttonLabel = \"Upload to Album\", className = \"\" }) {\r\n  const [gapiReady, setGapiReady] = useState(false);\r\n  const [token, setToken] = useState(null);\r\n  const [profile, setProfile] = useState(null);\r\n  const pickerApiLoaded = useRef(false);\r\n\r\n  // Load scripts\r\n  useEffect(() => {\r\n    const ensure = async () => {\r\n      await loadScript(LOAD_GSI);\r\n      await loadScript(LOAD_PICKER);\r\n      window.gapi.load(\"picker\", () => (pickerApiLoaded.current = true));\r\n      window.gapi.load(\"client:auth2\", async () => {\r\n        try {\r\n          await window.gapi.client.init({\r\n            apiKey: API_KEY,\r\n            clientId: CLIENT_ID,\r\n            scope: SCOPES,\r\n            discoveryDocs: [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"],\r\n          });\r\n          setGapiReady(true);\r\n        } catch (e) {\r\n          console.error(\"gapi init error\", e);\r\n        }\r\n      });\r\n    };\r\n    ensure();\r\n  }, []);\r\n\r\n  const signIn = async () => {\r\n    const auth = window.gapi.auth2.getAuthInstance();\r\n    const user = await auth.signIn();\r\n    const authResp = user.getAuthResponse(true);\r\n    setToken(authResp.access_token);\r\n\r\n    // Basic profile\r\n    const pf = user.getBasicProfile();\r\n    setProfile({\r\n      name: pf?.getName() || \"\",\r\n      email: pf?.getEmail() || \"\",\r\n    });\r\n  };\r\n\r\n  const openPicker = () => {\r\n    if (!pickerApiLoaded.current || !token) return;\r\n\r\n    /* global google */\r\n    const view = new google.picker.DocsUploadView().setParent(targetFolderId);\r\n    const picker = new google.picker.PickerBuilder()\r\n      .addView(view)\r\n      .setOAuthToken(token)\r\n      .setDeveloperKey(API_KEY)\r\n      .setCallback(pickerCallback)\r\n      .setTitle(\"Upload wedding media\")\r\n      .enableFeature(google.picker.Feature.SIMPLE_UPLOAD_ENABLED)\r\n      .build();\r\n\r\n    picker.setVisible(true);\r\n  };\r\n\r\n  const pickerCallback = async (data) => {\r\n    if (data.action !== google.picker.Action.PICKED) return;\r\n    // Multiple files possible\r\n    const picked = data.docs || [];\r\n    const session = await supabase.auth.getSession();\r\n    const userId = session?.data?.session?.user?.id || null;\r\n\r\n    for (const doc of picked) {\r\n      const originalName = doc.name;\r\n      const renamed = prefixWithUploader(profile?.name, originalName);\r\n\r\n      // Try to rename uploaded file on Drive (best-effort)\r\n      try {\r\n        await window.gapi.client.request({\r\n          path: `/drive/v3/files/${doc.id}`,\r\n          method: \"PATCH\",\r\n          body: { name: renamed, parents: [targetFolderId] },\r\n        });\r\n      } catch (e) {\r\n        console.warn(\"Rename failed (non-blocking):\", e);\r\n      }\r\n\r\n      const mime = doc.mimeType || \"application/octet-stream\";\r\n      const mediaType = inferMediaType(mime);\r\n      const previewUrl = drivePreviewUrl(doc.id);\r\n\r\n      await supabase.from(\"album_files\").insert({\r\n        drive_file_id: doc.id,\r\n        drive_name: renamed,\r\n        mime_type: mime,\r\n        size_bytes: doc.sizeBytes || null,\r\n        uploader_name: profile?.name || null,\r\n        uploader_email: profile?.email || null,\r\n        uploaded_by: userId,\r\n        folder_id: targetFolderId,\r\n        media_type: mediaType,\r\n        preview_url: previewUrl,\r\n      });\r\n    }\r\n    alert(\"Upload recorded! Refresh the album to see your media.\");\r\n  };\r\n\r\n  const handleClick = async () => {\r\n    if (!gapiReady) return;\r\n    if (!token) {\r\n      await signIn();\r\n    }\r\n    openPicker();\r\n  };\r\n\r\n  return (\r\n    <button\r\n      onClick={handleClick}\r\n      className={`px-4 py-2 rounded-xl shadow-lg bg-gradient-to-r from-emerald-500 to-teal-600 text-white hover:opacity-90 ${className}`}\r\n      disabled={!gapiReady}\r\n      title=\"Upload images/videos from your device to the wedding Drive\"\r\n    >\r\n      {buttonLabel}\r\n    </button>\r\n  );\r\n}\r\n\r\nasync function loadScript(src) {\r\n  if (document.querySelector(`script[src=\"${src}\"]`)) return;\r\n  await new Promise((resolve, reject) => {\r\n    const s = document.createElement(\"script\");\r\n    s.src = src;\r\n    s.async = true;\r\n    s.onload = resolve;\r\n    s.onerror = reject;\r\n    document.head.appendChild(s);\r\n  });\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}