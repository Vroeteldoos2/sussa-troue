{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\context\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// File: src/context/AuthProvider.jsx\nimport { createContext, useContext, useEffect, useMemo, useRef, useCallback, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction deriveRoleFrom(user) {\n  var _user$app_metadata, _user$user_metadata;\n  // Prefer server-side role in app_metadata, then user_metadata, then localStorage, else \"user\"\n  const metaRole = (user === null || user === void 0 ? void 0 : (_user$app_metadata = user.app_metadata) === null || _user$app_metadata === void 0 ? void 0 : _user$app_metadata.role) || (user === null || user === void 0 ? void 0 : (_user$user_metadata = user.user_metadata) === null || _user$user_metadata === void 0 ? void 0 : _user$user_metadata.role) || localStorage.getItem(\"role\");\n  return metaRole || \"user\";\n}\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  role: \"user\",\n  loading: true,\n  signIn: async () => {},\n  signUp: async () => {},\n  signOut: async () => {},\n  resetPassword: async () => {},\n  updateProfile: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n  const mountedRef = useRef(true);\n  useEffect(() => {\n    mountedRef.current = true;\n    (async () => {\n      try {\n        var _session$user;\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        if (error) console.error(\"[Auth] getSession error:\", error);\n        const u = (_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null;\n        if (!mountedRef.current) return;\n        setUser(u);\n        setRole(deriveRoleFrom(u));\n      } finally {\n        if (mountedRef.current) setLoading(false);\n      }\n    })();\n    const {\n      data: subscription\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      var _session$user2;\n      if (!mountedRef.current) return;\n      const u = (_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null;\n      setUser(u);\n      setRole(deriveRoleFrom(u));\n      setLoading(false);\n    });\n    return () => {\n      var _subscription$subscri, _subscription$subscri2;\n      mountedRef.current = false;\n      subscription === null || subscription === void 0 ? void 0 : (_subscription$subscri = subscription.subscription) === null || _subscription$subscri === void 0 ? void 0 : (_subscription$subscri2 = _subscription$subscri.unsubscribe) === null || _subscription$subscri2 === void 0 ? void 0 : _subscription$subscri2.call(_subscription$subscri);\n    };\n  }, []);\n  const signIn = useCallback(async ({\n    email,\n    password\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n  }, []);\n  const signUp = useCallback(async ({\n    email,\n    password,\n    metadata = {}\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata\n      }\n    });\n    if (error) throw error;\n  }, []);\n  const signOut = useCallback(async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n    localStorage.removeItem(\"role\");\n  }, []);\n  const resetPassword = useCallback(async ({\n    email,\n    redirectTo\n  }) => {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo\n    });\n    if (error) throw error;\n  }, []);\n  const updateProfile = useCallback(async (updates = {}) => {\n    var _data$user;\n    const {\n      data,\n      error\n    } = await supabase.auth.updateUser({\n      data: updates\n    });\n    if (error) throw error;\n    const u = (_data$user = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user !== void 0 ? _data$user : null;\n    setUser(u);\n    setRole(deriveRoleFrom(u));\n  }, []);\n  const value = useMemo(() => ({\n    user,\n    role,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n    updateProfile\n  }), [user, role, loading, signIn, signUp, signOut, resetPassword, updateProfile]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"ht/UUYnCv/xNzvi+pJFBRvZWPq0=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useRef","useCallback","useState","supabase","jsxDEV","_jsxDEV","deriveRoleFrom","user","_user$app_metadata","_user$user_metadata","metaRole","app_metadata","role","user_metadata","localStorage","getItem","AuthContext","loading","signIn","signUp","signOut","resetPassword","updateProfile","AuthProvider","children","_s","setUser","setRole","setLoading","mountedRef","current","_session$user","data","session","error","auth","getSession","console","u","subscription","onAuthStateChange","_event","_session$user2","_subscription$subscri","_subscription$subscri2","unsubscribe","call","email","password","signInWithPassword","metadata","options","removeItem","redirectTo","resetPasswordForEmail","updates","_data$user","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/context/AuthProvider.jsx"],"sourcesContent":["// File: src/context/AuthProvider.jsx\nimport { createContext, useContext, useEffect, useMemo, useRef, useCallback, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\n\nfunction deriveRoleFrom(user) {\n  // Prefer server-side role in app_metadata, then user_metadata, then localStorage, else \"user\"\n  const metaRole =\n    user?.app_metadata?.role ||\n    user?.user_metadata?.role ||\n    localStorage.getItem(\"role\");\n  return metaRole || \"user\";\n}\n\nconst AuthContext = createContext({\n  user: null,\n  role: \"user\",\n  loading: true,\n  signIn: async () => {},\n  signUp: async () => {},\n  signOut: async () => {},\n  resetPassword: async () => {},\n  updateProfile: async () => {},\n});\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n  const mountedRef = useRef(true);\n\n  useEffect(() => {\n    mountedRef.current = true;\n\n    (async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        if (error) console.error(\"[Auth] getSession error:\", error);\n        const u = session?.user ?? null;\n        if (!mountedRef.current) return;\n        setUser(u);\n        setRole(deriveRoleFrom(u));\n      } finally {\n        if (mountedRef.current) setLoading(false);\n      }\n    })();\n\n    const { data: subscription } = supabase.auth.onAuthStateChange((_event, session) => {\n      if (!mountedRef.current) return;\n      const u = session?.user ?? null;\n      setUser(u);\n      setRole(deriveRoleFrom(u));\n      setLoading(false);\n    });\n\n    return () => {\n      mountedRef.current = false;\n      subscription?.subscription?.unsubscribe?.();\n    };\n  }, []);\n\n  const signIn = useCallback(async ({ email, password }) => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    if (error) throw error;\n  }, []);\n\n  const signUp = useCallback(async ({ email, password, metadata = {} }) => {\n    const { error } = await supabase.auth.signUp({\n      email,\n      password,\n      options: { data: metadata },\n    });\n    if (error) throw error;\n  }, []);\n\n  const signOut = useCallback(async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    localStorage.removeItem(\"role\");\n  }, []);\n\n  const resetPassword = useCallback(async ({ email, redirectTo }) => {\n    const { error } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo,\n    });\n    if (error) throw error;\n  }, []);\n\n  const updateProfile = useCallback(async (updates = {}) => {\n    const { data, error } = await supabase.auth.updateUser({ data: updates });\n    if (error) throw error;\n    const u = data?.user ?? null;\n    setUser(u);\n    setRole(deriveRoleFrom(u));\n  }, []);\n\n  const value = useMemo(\n    () => ({\n      user,\n      role,\n      loading,\n      signIn,\n      signUp,\n      signOut,\n      resetPassword,\n      updateProfile,\n    }),\n    [user, role, loading, signIn, signUp, signOut, resetPassword, updateProfile]\n  );\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() {\n  return useContext(AuthContext);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}