{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\context\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// File: src/context/AuthProvider.jsx\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction deriveRoleFrom(user, profileRole) {\n  var _user$app_metadata;\n  if (profileRole) return profileRole;\n  const metaRole = user === null || user === void 0 ? void 0 : (_user$app_metadata = user.app_metadata) === null || _user$app_metadata === void 0 ? void 0 : _user$app_metadata.role;\n  if (metaRole) return metaRole;\n  const lsRole = localStorage.getItem(\"role\");\n  if (lsRole) return lsRole;\n  return \"user\";\n}\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  role: \"user\",\n  loading: true,\n  signIn: async () => {},\n  signUp: async () => {},\n  signOut: async () => {},\n  resetPassword: async () => {},\n  updateProfile: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n\n  // fetch profile.role (if exists)\n  const loadProfileRole = async u => {\n    try {\n      if (!(u !== null && u !== void 0 && u.id)) return null;\n      const {\n        data,\n        error\n      } = await supabase.from(\"profiles\").select(\"role\").eq(\"id\", u.id).single();\n      if (error) return null;\n      return (data === null || data === void 0 ? void 0 : data.role) || null;\n    } catch {\n      return null;\n    }\n  };\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        var _session$user;\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        if (error) console.error(\"[Auth] getSession error:\", error);\n        const u = (_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null;\n        let profileRole = null;\n        if (u) profileRole = await loadProfileRole(u);\n        if (!mounted) return;\n        setUser(u);\n        setRole(deriveRoleFrom(u, profileRole));\n      } finally {\n        if (mounted) setLoading(false);\n      }\n    })();\n    const {\n      data: sub\n    } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      var _session$user2;\n      const u = (_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null;\n      const profileRole = u ? await loadProfileRole(u) : null;\n      setUser(u);\n      setRole(deriveRoleFrom(u, profileRole));\n      setLoading(false);\n    });\n    return () => {\n      var _sub$subscription, _sub$subscription$uns;\n      mounted = false;\n      sub === null || sub === void 0 ? void 0 : (_sub$subscription = sub.subscription) === null || _sub$subscription === void 0 ? void 0 : (_sub$subscription$uns = _sub$subscription.unsubscribe) === null || _sub$subscription$uns === void 0 ? void 0 : _sub$subscription$uns.call(_sub$subscription);\n    };\n  }, []);\n  const signIn = async ({\n    email,\n    password\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n  };\n  const signUp = async ({\n    email,\n    password,\n    metadata = {}\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata\n      }\n    });\n    if (error) throw error;\n  };\n  const signOut = async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n    localStorage.removeItem(\"role\");\n  };\n  const resetPassword = async ({\n    email,\n    redirectTo\n  }) => {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo\n    });\n    if (error) throw error;\n  };\n  const updateProfile = async (updates = {}) => {\n    var _data$user;\n    const {\n      data,\n      error\n    } = await supabase.auth.updateUser({\n      data: updates\n    });\n    if (error) throw error;\n    const u = (_data$user = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user !== void 0 ? _data$user : null;\n    const profileRole = u ? await loadProfileRole(u) : null;\n    setUser(u);\n    setRole(deriveRoleFrom(u, profileRole));\n  };\n  const value = useMemo(() => ({\n    user,\n    role,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n    updateProfile\n  }), [user, role, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"acSkKP+ewJM/jgZkpihiTncOrDY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","supabase","jsxDEV","_jsxDEV","deriveRoleFrom","user","profileRole","_user$app_metadata","metaRole","app_metadata","role","lsRole","localStorage","getItem","AuthContext","loading","signIn","signUp","signOut","resetPassword","updateProfile","AuthProvider","children","_s","setUser","setRole","setLoading","loadProfileRole","u","id","data","error","from","select","eq","single","mounted","_session$user","session","auth","getSession","console","sub","onAuthStateChange","_event","_session$user2","_sub$subscription","_sub$subscription$uns","subscription","unsubscribe","call","email","password","signInWithPassword","metadata","options","removeItem","redirectTo","resetPasswordForEmail","updates","_data$user","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/context/AuthProvider.jsx"],"sourcesContent":["// File: src/context/AuthProvider.jsx\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\n\nfunction deriveRoleFrom(user, profileRole) {\n  if (profileRole) return profileRole;\n  const metaRole = user?.app_metadata?.role;\n  if (metaRole) return metaRole;\n  const lsRole = localStorage.getItem(\"role\");\n  if (lsRole) return lsRole;\n  return \"user\";\n}\n\nconst AuthContext = createContext({\n  user: null, role: \"user\", loading: true,\n  signIn: async () => {}, signUp: async () => {}, signOut: async () => {},\n  resetPassword: async () => {}, updateProfile: async () => {},\n});\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n\n  // fetch profile.role (if exists)\n  const loadProfileRole = async (u) => {\n    try {\n      if (!u?.id) return null;\n      const { data, error } = await supabase\n        .from(\"profiles\")\n        .select(\"role\")\n        .eq(\"id\", u.id)\n        .single();\n      if (error) return null;\n      return data?.role || null;\n    } catch { return null; }\n  };\n\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        if (error) console.error(\"[Auth] getSession error:\", error);\n        const u = session?.user ?? null;\n        let profileRole = null;\n        if (u) profileRole = await loadProfileRole(u);\n        if (!mounted) return;\n        setUser(u);\n        setRole(deriveRoleFrom(u, profileRole));\n      } finally {\n        if (mounted) setLoading(false);\n      }\n    })();\n\n    const { data: sub } = supabase.auth.onAuthStateChange(async (_event, session) => {\n      const u = session?.user ?? null;\n      const profileRole = u ? await loadProfileRole(u) : null;\n      setUser(u);\n      setRole(deriveRoleFrom(u, profileRole));\n      setLoading(false);\n    });\n\n    return () => {\n      mounted = false;\n      sub?.subscription?.unsubscribe?.();\n    };\n  }, []);\n\n  const signIn = async ({ email, password }) => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    if (error) throw error;\n  };\n  const signUp = async ({ email, password, metadata = {} }) => {\n    const { error } = await supabase.auth.signUp({ email, password, options: { data: metadata } });\n    if (error) throw error;\n  };\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    localStorage.removeItem(\"role\");\n  };\n  const resetPassword = async ({ email, redirectTo }) => {\n    const { error } = await supabase.auth.resetPasswordForEmail(email, { redirectTo });\n    if (error) throw error;\n  };\n  const updateProfile = async (updates = {}) => {\n    const { data, error } = await supabase.auth.updateUser({ data: updates });\n    if (error) throw error;\n    const u = data?.user ?? null;\n    const profileRole = u ? await loadProfileRole(u) : null;\n    setUser(u);\n    setRole(deriveRoleFrom(u, profileRole));\n  };\n\n  const value = useMemo(() => ({\n    user, role, loading, signIn, signUp, signOut, resetPassword, updateProfile\n  }), [user, role, loading]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() { return useContext(AuthContext); }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}