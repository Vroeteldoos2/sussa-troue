{"ast":null,"code":"// File: src/utils/fromEnv.js\n/**\r\n * Cleanly read CRA env values:\r\n * - strips quotes\r\n * - strips trailing inline comments (# ...)\r\n * - trims whitespace\r\n */\nexport function fromEnv(name, fallback = \"\") {\n  const raw = process.env[name];\n  if (raw == null) return fallback;\n  const cleaned = String(raw).split(\"#\")[0].replace(/^[\"']|[\"']$/g, \"\").trim();\n  return cleaned || fallback;\n}\n\n/** Centralized, tree-shakable ENV object */\nexport const ENV = {\n  // Supabase\n  SUPABASE_URL: fromEnv(\"REACT_APP_SUPABASE_URL\"),\n  SUPABASE_ANON_KEY: fromEnv(\"REACT_APP_SUPABASE_ANON_KEY\"),\n  // Google\n  GOOGLE_API_KEY: fromEnv(\"REACT_APP_GOOGLE_API_KEY\"),\n  GOOGLE_CLIENT_ID: fromEnv(\"REACT_APP_GOOGLE_CLIENT_ID\"),\n  // Drive folders\n  DRIVE_MAIN: fromEnv(\"REACT_APP_DRIVE_MAIN_FOLDER_ID\"),\n  DRIVE_PHOTOS: fromEnv(\"REACT_APP_DRIVE_PHOTOS_FOLDER_ID\"),\n  DRIVE_VIDEOS: fromEnv(\"REACT_APP_DRIVE_VIDEOS_FOLDER_ID\"),\n  DRIVE_MESSAGE_WALL: fromEnv(\"REACT_APP_DRIVE_MESSAGE_WALL_FOLDER_ID\"),\n  // App vars\n  WEDDING_DATE_TIME: fromEnv(\"REACT_APP_WEDDING_DATE_TIME\"),\n  VENUE_NAME: fromEnv(\"REACT_APP_VENUE_NAME\"),\n  VENUE_ADDRESS: fromEnv(\"REACT_APP_VENUE_ADDRESS\")\n};\n\n// Dev-only sanity logs (won't leak into UI)\nif (process.env.NODE_ENV !== \"production\") {\n  const missing = [];\n  if (!ENV.GOOGLE_API_KEY) missing.push(\"REACT_APP_GOOGLE_API_KEY\");\n  if (!ENV.GOOGLE_CLIENT_ID) missing.push(\"REACT_APP_GOOGLE_CLIENT_ID\");\n  if (!ENV.DRIVE_MAIN) missing.push(\"REACT_APP_DRIVE_MAIN_FOLDER_ID\");\n  if (!ENV.DRIVE_PHOTOS) missing.push(\"REACT_APP_DRIVE_PHOTOS_FOLDER_ID\");\n  if (!ENV.DRIVE_VIDEOS) missing.push(\"REACT_APP_DRIVE_VIDEOS_FOLDER_ID\");\n  if (!ENV.DRIVE_MESSAGE_WALL) missing.push(\"REACT_APP_DRIVE_MESSAGE_WALL_FOLDER_ID\");\n  if (missing.length) {\n    // eslint-disable-next-line no-console\n    console.warn(\"[fromEnv] Missing env vars:\", missing.join(\", \"));\n  }\n}","map":{"version":3,"names":["fromEnv","name","fallback","raw","process","env","cleaned","String","split","replace","trim","ENV","SUPABASE_URL","SUPABASE_ANON_KEY","GOOGLE_API_KEY","GOOGLE_CLIENT_ID","DRIVE_MAIN","DRIVE_PHOTOS","DRIVE_VIDEOS","DRIVE_MESSAGE_WALL","WEDDING_DATE_TIME","VENUE_NAME","VENUE_ADDRESS","NODE_ENV","missing","push","length","console","warn","join"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/utils/fromEnv.js"],"sourcesContent":["// File: src/utils/fromEnv.js\r\n/**\r\n * Cleanly read CRA env values:\r\n * - strips quotes\r\n * - strips trailing inline comments (# ...)\r\n * - trims whitespace\r\n */\r\nexport function fromEnv(name, fallback = \"\") {\r\n  const raw = process.env[name];\r\n  if (raw == null) return fallback;\r\n  const cleaned = String(raw)\r\n    .split(\"#\")[0]\r\n    .replace(/^[\"']|[\"']$/g, \"\")\r\n    .trim();\r\n  return cleaned || fallback;\r\n}\r\n\r\n/** Centralized, tree-shakable ENV object */\r\nexport const ENV = {\r\n  // Supabase\r\n  SUPABASE_URL: fromEnv(\"REACT_APP_SUPABASE_URL\"),\r\n  SUPABASE_ANON_KEY: fromEnv(\"REACT_APP_SUPABASE_ANON_KEY\"),\r\n\r\n  // Google\r\n  GOOGLE_API_KEY: fromEnv(\"REACT_APP_GOOGLE_API_KEY\"),\r\n  GOOGLE_CLIENT_ID: fromEnv(\"REACT_APP_GOOGLE_CLIENT_ID\"),\r\n\r\n  // Drive folders\r\n  DRIVE_MAIN: fromEnv(\"REACT_APP_DRIVE_MAIN_FOLDER_ID\"),\r\n  DRIVE_PHOTOS: fromEnv(\"REACT_APP_DRIVE_PHOTOS_FOLDER_ID\"),\r\n  DRIVE_VIDEOS: fromEnv(\"REACT_APP_DRIVE_VIDEOS_FOLDER_ID\"),\r\n  DRIVE_MESSAGE_WALL: fromEnv(\"REACT_APP_DRIVE_MESSAGE_WALL_FOLDER_ID\"),\r\n\r\n  // App vars\r\n  WEDDING_DATE_TIME: fromEnv(\"REACT_APP_WEDDING_DATE_TIME\"),\r\n  VENUE_NAME: fromEnv(\"REACT_APP_VENUE_NAME\"),\r\n  VENUE_ADDRESS: fromEnv(\"REACT_APP_VENUE_ADDRESS\"),\r\n};\r\n\r\n// Dev-only sanity logs (won't leak into UI)\r\nif (process.env.NODE_ENV !== \"production\") {\r\n  const missing = [];\r\n  if (!ENV.GOOGLE_API_KEY) missing.push(\"REACT_APP_GOOGLE_API_KEY\");\r\n  if (!ENV.GOOGLE_CLIENT_ID) missing.push(\"REACT_APP_GOOGLE_CLIENT_ID\");\r\n  if (!ENV.DRIVE_MAIN) missing.push(\"REACT_APP_DRIVE_MAIN_FOLDER_ID\");\r\n  if (!ENV.DRIVE_PHOTOS) missing.push(\"REACT_APP_DRIVE_PHOTOS_FOLDER_ID\");\r\n  if (!ENV.DRIVE_VIDEOS) missing.push(\"REACT_APP_DRIVE_VIDEOS_FOLDER_ID\");\r\n  if (!ENV.DRIVE_MESSAGE_WALL) missing.push(\"REACT_APP_DRIVE_MESSAGE_WALL_FOLDER_ID\");\r\n  if (missing.length) {\r\n    // eslint-disable-next-line no-console\r\n    console.warn(\"[fromEnv] Missing env vars:\", missing.join(\", \"));\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,OAAOA,CAACC,IAAI,EAAEC,QAAQ,GAAG,EAAE,EAAE;EAC3C,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACJ,IAAI,CAAC;EAC7B,IAAIE,GAAG,IAAI,IAAI,EAAE,OAAOD,QAAQ;EAChC,MAAMI,OAAO,GAAGC,MAAM,CAACJ,GAAG,CAAC,CACxBK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CACbC,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAC3BC,IAAI,CAAC,CAAC;EACT,OAAOJ,OAAO,IAAIJ,QAAQ;AAC5B;;AAEA;AACA,OAAO,MAAMS,GAAG,GAAG;EACjB;EACAC,YAAY,EAAEZ,OAAO,CAAC,wBAAwB,CAAC;EAC/Ca,iBAAiB,EAAEb,OAAO,CAAC,6BAA6B,CAAC;EAEzD;EACAc,cAAc,EAAEd,OAAO,CAAC,0BAA0B,CAAC;EACnDe,gBAAgB,EAAEf,OAAO,CAAC,4BAA4B,CAAC;EAEvD;EACAgB,UAAU,EAAEhB,OAAO,CAAC,gCAAgC,CAAC;EACrDiB,YAAY,EAAEjB,OAAO,CAAC,kCAAkC,CAAC;EACzDkB,YAAY,EAAElB,OAAO,CAAC,kCAAkC,CAAC;EACzDmB,kBAAkB,EAAEnB,OAAO,CAAC,wCAAwC,CAAC;EAErE;EACAoB,iBAAiB,EAAEpB,OAAO,CAAC,6BAA6B,CAAC;EACzDqB,UAAU,EAAErB,OAAO,CAAC,sBAAsB,CAAC;EAC3CsB,aAAa,EAAEtB,OAAO,CAAC,yBAAyB;AAClD,CAAC;;AAED;AACA,IAAII,OAAO,CAACC,GAAG,CAACkB,QAAQ,KAAK,YAAY,EAAE;EACzC,MAAMC,OAAO,GAAG,EAAE;EAClB,IAAI,CAACb,GAAG,CAACG,cAAc,EAAEU,OAAO,CAACC,IAAI,CAAC,0BAA0B,CAAC;EACjE,IAAI,CAACd,GAAG,CAACI,gBAAgB,EAAES,OAAO,CAACC,IAAI,CAAC,4BAA4B,CAAC;EACrE,IAAI,CAACd,GAAG,CAACK,UAAU,EAAEQ,OAAO,CAACC,IAAI,CAAC,gCAAgC,CAAC;EACnE,IAAI,CAACd,GAAG,CAACM,YAAY,EAAEO,OAAO,CAACC,IAAI,CAAC,kCAAkC,CAAC;EACvE,IAAI,CAACd,GAAG,CAACO,YAAY,EAAEM,OAAO,CAACC,IAAI,CAAC,kCAAkC,CAAC;EACvE,IAAI,CAACd,GAAG,CAACQ,kBAAkB,EAAEK,OAAO,CAACC,IAAI,CAAC,wCAAwC,CAAC;EACnF,IAAID,OAAO,CAACE,MAAM,EAAE;IAClB;IACAC,OAAO,CAACC,IAAI,CAAC,6BAA6B,EAAEJ,OAAO,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;EACjE;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}