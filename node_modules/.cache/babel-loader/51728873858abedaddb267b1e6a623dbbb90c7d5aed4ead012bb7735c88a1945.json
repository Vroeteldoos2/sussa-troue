{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\context\\\\AuthProvider.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction deriveRoleFrom(user) {\n  var _user$app_metadata;\n  const metaRole = user === null || user === void 0 ? void 0 : (_user$app_metadata = user.app_metadata) === null || _user$app_metadata === void 0 ? void 0 : _user$app_metadata.role;\n  if (metaRole) return metaRole;\n  const lsRole = localStorage.getItem(\"role\");\n  if (lsRole) return lsRole;\n  return \"user\";\n}\nconst AuthContext = /*#__PURE__*/createContext({\n  user: null,\n  role: \"user\",\n  loading: true,\n  signIn: async () => {},\n  signUp: async () => {},\n  signOut: async () => {},\n  resetPassword: async () => {},\n  updateProfile: async () => {}\n});\nexport function AuthProvider({\n  children\n}) {\n  _s();\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        var _session$user;\n        const {\n          data: {\n            session\n          },\n          error\n        } = await supabase.auth.getSession();\n        if (error) console.error(\"[Auth] getSession error:\", error);\n        const u = (_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null;\n        if (!mounted) return;\n        setUser(u);\n        setRole(deriveRoleFrom(u));\n      } finally {\n        if (mounted) setLoading(false);\n      }\n    })();\n    const {\n      data: sub\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      var _session$user2;\n      const u = (_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null;\n      setUser(u);\n      setRole(deriveRoleFrom(u));\n      setLoading(false);\n    });\n    return () => {\n      var _sub$subscription, _sub$subscription$uns;\n      mounted = false;\n      sub === null || sub === void 0 ? void 0 : (_sub$subscription = sub.subscription) === null || _sub$subscription === void 0 ? void 0 : (_sub$subscription$uns = _sub$subscription.unsubscribe) === null || _sub$subscription$uns === void 0 ? void 0 : _sub$subscription$uns.call(_sub$subscription);\n    };\n  }, []);\n  const signIn = async ({\n    email,\n    password\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signInWithPassword({\n      email,\n      password\n    });\n    if (error) throw error;\n  };\n  const signUp = async ({\n    email,\n    password,\n    metadata = {}\n  }) => {\n    const {\n      error\n    } = await supabase.auth.signUp({\n      email,\n      password,\n      options: {\n        data: metadata\n      }\n    });\n    if (error) throw error;\n  };\n  const signOut = async () => {\n    const {\n      error\n    } = await supabase.auth.signOut();\n    if (error) throw error;\n    localStorage.removeItem(\"role\");\n  };\n  const resetPassword = async ({\n    email,\n    redirectTo\n  }) => {\n    const {\n      error\n    } = await supabase.auth.resetPasswordForEmail(email, {\n      redirectTo\n    });\n    if (error) throw error;\n  };\n  const updateProfile = async (updates = {}) => {\n    var _data$user, _data$user2;\n    const {\n      data,\n      error\n    } = await supabase.auth.updateUser({\n      data: updates\n    });\n    if (error) throw error;\n    setUser((_data$user = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user !== void 0 ? _data$user : null);\n    setRole(deriveRoleFrom((_data$user2 = data === null || data === void 0 ? void 0 : data.user) !== null && _data$user2 !== void 0 ? _data$user2 : null));\n  };\n  const value = useMemo(() => ({\n    user,\n    role,\n    loading,\n    signIn,\n    signUp,\n    signOut,\n    resetPassword,\n    updateProfile\n  }), [user, role, loading]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n_s(AuthProvider, \"acSkKP+ewJM/jgZkpihiTncOrDY=\");\n_c = AuthProvider;\nexport function useAuth() {\n  _s2();\n  return useContext(AuthContext);\n}\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useEffect","useMemo","useState","supabase","jsxDEV","_jsxDEV","deriveRoleFrom","user","_user$app_metadata","metaRole","app_metadata","role","lsRole","localStorage","getItem","AuthContext","loading","signIn","signUp","signOut","resetPassword","updateProfile","AuthProvider","children","_s","setUser","setRole","setLoading","mounted","_session$user","data","session","error","auth","getSession","console","u","sub","onAuthStateChange","_event","_session$user2","_sub$subscription","_sub$subscription$uns","subscription","unsubscribe","call","email","password","signInWithPassword","metadata","options","removeItem","redirectTo","resetPasswordForEmail","updates","_data$user","_data$user2","updateUser","value","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/context/AuthProvider.jsx"],"sourcesContent":["import { createContext, useContext, useEffect, useMemo, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\n\nfunction deriveRoleFrom(user) {\n  const metaRole = user?.app_metadata?.role;\n  if (metaRole) return metaRole;\n  const lsRole = localStorage.getItem(\"role\");\n  if (lsRole) return lsRole;\n  return \"user\";\n}\n\nconst AuthContext = createContext({\n  user: null, role: \"user\", loading: true,\n  signIn: async () => {}, signUp: async () => {}, signOut: async () => {},\n  resetPassword: async () => {}, updateProfile: async () => {},\n});\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [role, setRole] = useState(\"user\");\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n    (async () => {\n      try {\n        const { data: { session }, error } = await supabase.auth.getSession();\n        if (error) console.error(\"[Auth] getSession error:\", error);\n        const u = session?.user ?? null;\n        if (!mounted) return;\n        setUser(u); setRole(deriveRoleFrom(u));\n      } finally { if (mounted) setLoading(false); }\n    })();\n    const { data: sub } = supabase.auth.onAuthStateChange((_event, session) => {\n      const u = session?.user ?? null;\n      setUser(u); setRole(deriveRoleFrom(u)); setLoading(false);\n    });\n    return () => { mounted = false; sub?.subscription?.unsubscribe?.(); };\n  }, []);\n\n  const signIn = async ({ email, password }) => {\n    const { error } = await supabase.auth.signInWithPassword({ email, password });\n    if (error) throw error;\n  };\n  const signUp = async ({ email, password, metadata = {} }) => {\n    const { error } = await supabase.auth.signUp({ email, password, options: { data: metadata } });\n    if (error) throw error;\n  };\n  const signOut = async () => {\n    const { error } = await supabase.auth.signOut();\n    if (error) throw error;\n    localStorage.removeItem(\"role\");\n  };\n  const resetPassword = async ({ email, redirectTo }) => {\n    const { error } = await supabase.auth.resetPasswordForEmail(email, { redirectTo });\n    if (error) throw error;\n  };\n  const updateProfile = async (updates = {}) => {\n    const { data, error } = await supabase.auth.updateUser({ data: updates });\n    if (error) throw error;\n    setUser(data?.user ?? null); setRole(deriveRoleFrom(data?.user ?? null));\n  };\n\n  const value = useMemo(() => ({\n    user, role, loading, signIn, signUp, signOut, resetPassword, updateProfile\n  }), [user, role, loading]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n}\n\nexport function useAuth() { return useContext(AuthContext); }\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}