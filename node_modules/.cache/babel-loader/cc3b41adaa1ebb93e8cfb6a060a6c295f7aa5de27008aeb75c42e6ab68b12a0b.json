{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\drago\\\\OneDrive\\\\Desktop\\\\sussa-troue\\\\src\\\\pages\\\\ResetPasswordUpdatePage.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { supabase } from \"../supabaseClient\";\nimport { toast } from \"react-hot-toast\";\nimport { useNavigate } from \"react-router-dom\";\nimport AuthLayout from \"../components/AuthLayout\";\nimport { AUTH_SLIDES, AUTH_CAPTIONS } from \"./_authAssets\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ResetPasswordUpdatePage() {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirm, setConfirm] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [formErr, setFormErr] = useState(\"\");\n  const navigate = useNavigate();\n  useEffect(() => {\n    (async () => {\n      const {\n        data\n      } = await supabase.auth.getSession();\n      if (!(data !== null && data !== void 0 && data.session)) {\n        toast.error(\"Your reset link is invalid or expired. Request a new one.\");\n      }\n    })();\n  }, []);\n  const submit = async e => {\n    e.preventDefault();\n    setFormErr(\"\");\n    if (!password || !confirm) return setFormErr(\"Please enter and confirm your new password.\");\n    if (password.length < 8) return setFormErr(\"Password must be at least 8 characters.\");\n    if (password !== confirm) return setFormErr(\"Passwords do not match.\");\n    setLoading(true);\n    try {\n      const {\n        error\n      } = await supabase.auth.updateUser({\n        password\n      });\n      if (error) throw error;\n      toast.success(\"Password updated! You can now log in.\");\n      navigate(\"/login\", {\n        replace: true\n      });\n    } catch (err) {\n      const msg = (err === null || err === void 0 ? void 0 : err.message) || \"Could not update password. Try requesting a new link.\";\n      setFormErr(msg);\n      toast.error(msg);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthLayout, {\n    slides: AUTH_SLIDES,\n    captions: AUTH_CAPTIONS,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"section-title text-center\",\n      children: \"Set a New Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), !!formErr && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\",\n      children: formErr\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      className: \"mt-4 space-y-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"password\",\n        placeholder: \"New password (min 8 chars)\",\n        autoComplete: \"new-password\",\n        value: password,\n        minLength: 8,\n        onChange: e => setPassword(e.target.value),\n        disabled: loading,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"password\",\n        placeholder: \"Confirm new password\",\n        autoComplete: \"new-password\",\n        value: confirm,\n        onChange: e => setConfirm(e.target.value),\n        disabled: loading,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-primary w-full\",\n        type: \"submit\",\n        disabled: loading,\n        children: loading ? \"Updating…\" : \"Update Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPasswordUpdatePage, \"X7mIVMt0pPCzvOvUbM8dz8UK1hs=\", false, function () {\n  return [useNavigate];\n});\n_c = ResetPasswordUpdatePage;\nvar _c;\n$RefreshReg$(_c, \"ResetPasswordUpdatePage\");","map":{"version":3,"names":["useEffect","useState","supabase","toast","useNavigate","AuthLayout","AUTH_SLIDES","AUTH_CAPTIONS","jsxDEV","_jsxDEV","ResetPasswordUpdatePage","_s","password","setPassword","confirm","setConfirm","loading","setLoading","formErr","setFormErr","navigate","data","auth","getSession","session","error","submit","e","preventDefault","length","updateUser","success","replace","err","msg","message","slides","captions","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","autoComplete","value","minLength","onChange","target","disabled","required","_c","$RefreshReg$"],"sources":["C:/Users/drago/OneDrive/Desktop/sussa-troue/src/pages/ResetPasswordUpdatePage.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { supabase } from \"../supabaseClient\";\r\nimport { toast } from \"react-hot-toast\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport AuthLayout from \"../components/AuthLayout\";\r\nimport { AUTH_SLIDES, AUTH_CAPTIONS } from \"./_authAssets\";\r\n\r\nexport default function ResetPasswordUpdatePage() {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirm, setConfirm] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [formErr, setFormErr] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const { data } = await supabase.auth.getSession();\r\n      if (!data?.session) {\r\n        toast.error(\"Your reset link is invalid or expired. Request a new one.\");\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const submit = async (e) => {\r\n    e.preventDefault();\r\n    setFormErr(\"\");\r\n    if (!password || !confirm) return setFormErr(\"Please enter and confirm your new password.\");\r\n    if (password.length < 8) return setFormErr(\"Password must be at least 8 characters.\");\r\n    if (password !== confirm) return setFormErr(\"Passwords do not match.\");\r\n\r\n    setLoading(true);\r\n    try {\r\n      const { error } = await supabase.auth.updateUser({ password });\r\n      if (error) throw error;\r\n      toast.success(\"Password updated! You can now log in.\");\r\n      navigate(\"/login\", { replace: true });\r\n    } catch (err) {\r\n      const msg = err?.message || \"Could not update password. Try requesting a new link.\";\r\n      setFormErr(msg);\r\n      toast.error(msg);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AuthLayout slides={AUTH_SLIDES} captions={AUTH_CAPTIONS}>\r\n      <h1 className=\"section-title text-center\">Set a New Password</h1>\r\n\r\n      {!!formErr && (\r\n        <div className=\"mt-3 text-sm text-red-600 bg-red-50 border border-red-200 rounded-md p-2\">\r\n          {formErr}\r\n        </div>\r\n      )}\r\n\r\n      <form onSubmit={submit} className=\"mt-4 space-y-3\">\r\n        <input\r\n          className=\"input\"\r\n          type=\"password\"\r\n          placeholder=\"New password (min 8 chars)\"\r\n          autoComplete=\"new-password\"\r\n          value={password}\r\n          minLength={8}\r\n          onChange={(e) => setPassword(e.target.value)}\r\n          disabled={loading}\r\n          required\r\n        />\r\n        <input\r\n          className=\"input\"\r\n          type=\"password\"\r\n          placeholder=\"Confirm new password\"\r\n          autoComplete=\"new-password\"\r\n          value={confirm}\r\n          onChange={(e) => setConfirm(e.target.value)}\r\n          disabled={loading}\r\n          required\r\n        />\r\n        <button className=\"btn-primary w-full\" type=\"submit\" disabled={loading}>\r\n          {loading ? \"Updating…\" : \"Update Password\"}\r\n        </button>\r\n      </form>\r\n    </AuthLayout>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}